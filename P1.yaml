name: P1
description: "BooleanLogic: A language that expresses and evaluates boolean logic"

syntax:
  constants: [true, false]
  operators:
    - name: ','
      description: "Logical AND operator. Returns true if both operands are true."
      arity: 2
    - name: ';'
      description: "Logical OR operator. Returns true if either operand is true."
      arity: 2
    - name: '\\+'
      description: "Logical NOT operator. Returns true if the operand is false, and vice versa."
      arity: 1

modules:
  - name: constants
    description: "Defines the boolean constants true and false."
    language-specific:
      - rust: 
        - filename: src/constants/constants.rs
        - struct: Constants
          attribute: 
            - name: values
              type: array of boolean
              description: "An array storing the boolean constants."
      - python: 
        - filename: constants/constants.py
        - class: Constants
          attribute: 
            - name: values
              type: list of boolean
              description: "A list storing the boolean constants."

  - name: operators
    description: "Implements the boolean operators: AND, OR, and NOT."
    functions:
      - name: and_operator
        description: "Takes two boolean operands and returns their logical AND."
        parameters: [operand1: boolean, operand2: boolean]
        return: boolean
      - name: or_operator
        description: "Takes two boolean operands and returns their logical OR."
        parameters: [operand1: boolean, operand2: boolean]
        return: boolean
      - name: not_operator
        description: "Takes one boolean operand and returns its logical NOT."
        parameters: [operand: boolean]
        return: boolean
    language-specific:
      - rust: 
        - filename: src/operators/operators.rs
        - struct: Operators
      - python: 
        - filename: operators/operators.py
        - class: Operators

  - name: evaluator
    description: "Evaluates boolean expressions parsed into an internal format."
    functions:
      - name: evaluate
        description: "Takes an internal expression and evaluates it."
        parameters: [expression: string]
        return: boolean
        calls: [parser.parse, operators.and_operator, operators.or_operator, operators.not_operator]
    language-specific:
      - rust: 
        - filename: src/evaluator/evaluator.rs
        - struct: Evaluator
      - python: 
        - filename: evaluator/evaluator.py
        - class: Evaluator

  - name: parser
    description: "Parses expressions into an internal format for evaluation. The internal format is a list of tuples, where each tuple contains an operator and its operands."
    functions:
      - name: parse
        description: "Takes an expression as a string and parses it into an internal format."
        parameters: [expression: string]
        return: internal_expression
    language-specific:
      - rust: 
        - filename: src/parser/parser.rs
        - struct: Parser
      - python: 
        - filename: parser/parser.py
        - class: Parser

  - name: shell
    description: "Interactive shell for entering boolean expressions and getting their evaluated results."
    functions:
      - name: start_shell
        description: "Initializes and starts the interactive shell. No parameters or return values."
        parameters: []
        return: None
        calls: [evaluator.evaluate]
    language-specific:
      - rust: 
        - filename: src/shell/shell.rs
        - struct: Shell
      - python: 
        - filename: shell/shell.py
        - class: Shell

examples:
  - description: "Evaluation of an AND operation where one operand is false."
    expression: ',(true, false)'
    result: false
  - description: "Evaluation of an OR operation where one operand is true."
    expression: ';(true, false)'
    result: true
  - description: "Evaluation of a NOT operation on a true operand."
    expression: '\\+(true)'
    result: false

tests:
  - description: "Test of an AND operation where one operand is false."
    query: ',(true, false).'
    expected: false
  - description: "Test of an OR operation where one operand is true."
    query: ';(true, false).'
    expected: true
  - description: "Test of a NOT operation on a true operand."
    query: '\\+(true).'
    expected: false

shell: |
  Prolog Lite - P1 Shell
  Enter your Prolog queries or use built-in commands:
  - Type 'exit.' to quit the shell.
  - Type 'consult("<filename>").' to load a file with P1 facts.

  ?- ';(true, false).'
  Result: true

  ?- '\\+(true).'
  Result: false

  ?- exit.
  Exiting Prolog Lite - P1 Shell
